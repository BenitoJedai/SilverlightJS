// Copyright 2012 The Closure Xaml Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Provides a base class for all Panel elements.
 * Use Panel elements to position and arrange child objects in xaml-based applications.
 */

goog.provide('goog.xaml.controls.Panel');

goog.require('goog.xaml.DependencyType');
goog.require('goog.xaml.FrameworkElement');
goog.require('goog.xaml.media.Brush');
goog.require('goog.xaml.UIElement');

/**
 * @constructor
 * @extends goog.xaml.FrameworkElement
 */
goog.xaml.controls.Panel = function () {
    goog.xaml.FrameworkElement.call(this);
    this.Children = new Array();
};

goog.inherits(goog.xaml.controls.Panel, goog.xaml.FrameworkElement);

/**
 * @override
 */
goog.xaml.controls.Panel.prototype.createComponent = function () {
    goog.xaml.controls.Panel.superClass_.createComponent.call(this);
    goog.array.forEach(this.Children, function (child, index, array) {
        child.createComponent();
    });
};

/**
 * Gets or sets a Brush that is used to fill the panel.
 * @type {goog.xaml.media.Brush?}
 */
goog.xaml.controls.Panel.prototype.Background;

/**
 * @type {number}
 */
goog.xaml.controls.Panel.BackgroundProperty = goog.xaml.DependencyProperty.Register(
    "Background", goog.xaml.media.Brush.DependencyType, goog.xaml.controls.Panel.DependencyType, new goog.xaml.PropertyMetadata(null)
);

Object.defineProperty(goog.xaml.controls.Panel.prototype, "Background", {
    /**
     * @this {goog.xaml.controls.Panel}
     * @param {goog.xaml.media.Brush?} background
     */
    set:function (background) {
        this.SetValue(goog.xaml.controls.Panel.BackgroundProperty, background);
    },
    /**
     * @this {goog.xaml.controls.Panel}
     * @return {goog.xaml.media.Brush?}
     */
    get:function () {
        return /** @type {goog.xaml.media.Brush?} */(this.GetValue(goog.xaml.controls.Panel.BackgroundProperty));
    },
    enumerable:true,
    configurable:true
});

/**
 * Gets the collection of child elements of the panel.
 * @type {Array.<goog.xaml.UIElement>?}
 */
goog.xaml.controls.Panel.prototype.Children = null;

/**
 * @type {number}
 */
goog.xaml.controls.Panel.DependencyType = goog.xaml.DependencyType.Register("goog.xaml.controls.Panel");

/**
 * @type {number}
 */
goog.xaml.controls.Panel.prototype.DependencyType = goog.xaml.controls.Panel.DependencyType;

/**
 * Gets a value that indicates whether this Panel is a container for UI items that are generated by an ItemsControl.
 * @type {boolean}
 */
goog.xaml.controls.Panel.prototype.IsItemsHost;

/**
 * @type {number}
 */
goog.xaml.controls.Panel.IsItemsHostProperty = goog.xaml.DependencyProperty.Register(
    "IsItemsHost", goog.xaml.Boolean.DependencyType, goog.xaml.controls.Panel.DependencyType, new goog.xaml.PropertyMetadata(false)
);

Object.defineProperty(goog.xaml.controls.Panel.prototype, "IsItemsHost", {
    /**
     * @this {goog.xaml.controls.Panel}
     * @param {boolean} isItemsHost
     */
    set:function (isItemsHost) {
        this.SetValue(goog.xaml.controls.Panel.IsItemsHostProperty, isItemsHost);
    },
    /**
     * @this {goog.xaml.controls.Panel}
     * @return {boolean}
     */
    get:function () {
        return /** @type {boolean} */(this.GetValue(goog.xaml.controls.Panel.IsItemsHostProperty));
    },
    enumerable:true,
    configurable:true
});
